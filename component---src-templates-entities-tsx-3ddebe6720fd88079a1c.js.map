{"version":3,"file":"component---src-templates-entities-tsx-3ddebe6720fd88079a1c.js","mappings":"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","sources":["webpack://revuedescolonies/./src/templates/tei/Birth.tsx","webpack://revuedescolonies/./src/templates/tei/Entity.tsx","webpack://revuedescolonies/./src/templates/entities.tsx","webpack://revuedescolonies/./src/utils/slugify.ts"],"sourcesContent":["import React from \"react\"\nimport { TBehavior } from \"gatsby-theme-ceteicean/src/components/DefaultBehaviors\"\nimport { TEINodes } from \"react-teirouter\"\nimport { Behavior } from \"gatsby-theme-ceteicean/src/components/Behavior\"\n\ntype TEIProps = {\n  teiNode: Node,\n  availableRoutes?: string[]\n}\n\nconst Birth: TBehavior = (props: TEIProps) => {\n  return (<Behavior node={props.teiNode}><>\n    <TEINodes \n        teiNodes={props.teiNode.childNodes}\n        {...props}/>{' â€“ '}\n  </></Behavior>)\n}\n\nexport default Birth\n","import React from \"react\"\nimport { TEINodes } from \"react-teirouter\"\nimport { Behavior } from \"gatsby-theme-ceteicean/src/components/Behavior\"\nimport { Box } from \"@mui/material\"\n\ntype TEIProps = {\n  teiNode: Node,\n  availableRoutes?: string[]\n  lang: Lang\n  authors: {[key: string]: string}\n}\n\nexport type EntityBehavior = (props: TEIProps) => JSX.Element | null\n\nconst Entity: EntityBehavior = (props: TEIProps) => {\n  const el = props.teiNode as Element\n  // Apparently this needs basic XML DOM functions at build time.\n  const entityContent = Array.from(el.getElementsByTagName('tei-note')).filter(e => e.getAttribute(\"lang\") === props.lang)[0]\n  const resp = entityContent?.getAttribute(\"resp\")\n  const authors = resp?.split(\" \") || []\n  const authorsData = authors.reduce<string[]>((acc, a) => {\n    if (a && a !== \"#other\") {\n      acc.push(props.authors[a.replace(\"#\", \"\")])\n    }\n    return acc\n  }, [])\n  const author = authorsData.length > 0 ? <Box sx={{ fontStyle: \"italic\", textAlign: \"right\", fontSize: \"1rem\" }}>{authorsData.join(\", \")}</Box> : null\n  return (<Behavior node={props.teiNode}><>\n    <TEINodes \n        teiNodes={props.teiNode.childNodes}\n        {...props}/>\n    {author}\n  </></Behavior>)\n}\n\nexport default Entity\n","import React from \"react\";\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Box, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\"\nimport { Link } from \"gatsby\"\nimport {Routes} from \"gatsby-theme-ceteicean/src/components/Ceteicean\"\nimport Renderer from \"gatsby-theme-ceteicean/src/components/Renderer\";\nimport Q from \"../gatsby-theme-ceteicean/components/Q\";\nimport Graphic from \"../gatsby-theme-ceteicean/components/Graphic\";\nimport { Ref, SafeUnchangedNode } from \"gatsby-theme-ceteicean/src/components/DefaultBehaviors\";\nimport { slugify } from \"../utils/slugify\";\nimport Birth from \"./tei/Birth\";\nimport Entity from \"./tei/Entity\";\n\ninterface occurenceObj {\n    pageName: string\n    pageLink: string\n    repeats: number\n}\n\ninterface Props {\n  pageContext: {\n    language: Lang\n    data: {\n      id: string,\n      name: string,\n      occurrences: occurenceObj[]\n    }\n    elements: string[]\n    prefixed: string\n    authors: {[key: string]: string}\n  }\n}\n\ntype TEIProps = {\n  teiNode: Node,\n  availableRoutes?: string[],\n  curLang: string\n}\n\n\nconst renderRefrences = (references:occurenceObj[], id: string) => {\n    \n    return (\n      <List>\n        {references.map((refObj:occurenceObj) => (\n          <ListItem>\n            <ListItemText>\n              <Link to={`/${refObj.pageLink}?showEntities=${id}`}>{refObj.pageName} ({refObj.repeats})</Link>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    )\n}\n\nconst Title = (props: TEIProps) => {\n  const el = props.teiNode as Element\n  const lang = el.getAttribute(\"lang\")\n  if (lang !== props.curLang) return null;\n  return <Typography variant=\"h3\" component=\"h1\" gutterBottom={false} sx={{\n    marginBottom: \"2rem\"\n  }}><SafeUnchangedNode {...props}/></Typography>\n}\n\nexport default function ReferencesPage({pageContext}: Props) {\n  const {language, prefixed, elements, data, authors} = pageContext;\n\n  const routes: Routes = {\n    \"tei-person\": (props) => <Entity lang={language} authors={authors} {...props}/>,\n    \"tei-place\": (props) => <Entity lang={language} authors={authors} {...props}/>,\n    \"tei-org\": (props) => <Entity lang={language} authors={authors} {...props}/>,\n    \"tei-bibl\": (props) => {\n      const el = props.teiNode as Element\n      // Only deal with bibliography bibls.\n      if (el.parentElement?.tagName.toLocaleLowerCase() === \"tei-note\") {\n        return <SafeUnchangedNode {...props}/>\n      }\n      return <Entity lang={language} authors={authors} {...props}/>\n    },\n    \"tei-graphic\": (props) => <Box sx={{textAlign: \"center\"}}><Graphic {...props}/></Box>,\n    \"tei-ref\": Ref,\n    \"tei-q\": (props) => <Q {...props} curLang={language}/>,\n    \"tei-persname\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-orgname\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-placename\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-title\": (props) => {\n      const el = props.teiNode as Element\n      return [\"periodical\", \"legal\"].includes(el.parentElement?.getAttribute(\"type\") || \"\") ? <Title {...props} curLang={language}/>\n      : <SafeUnchangedNode {...props}/>\n    },\n    \"tei-birth\": Birth,\n    \"tei-note\": (props) => {\n      const el = props.teiNode as Element\n      if (el.getAttribute(\"xml:lang\") === language) {\n        return <SafeUnchangedNode {...props}/>\n      }\n      return null\n    }\n  }\n    return (\n      <Layout location={`/${language}/${slugify(data.name)}`}>\n      <SEO title={data.name} lang={\"en\"}/>\n      <Container component=\"main\" maxWidth=\"md\">\n        \n        <Renderer name={data.name} prefixed={prefixed} elements={elements} routes={routes}/>\n        <Typography variant=\"h4\" component=\"h2\" gutterBottom={false} sx={{\n          marginBottom: \"1rem\", marginTop: \"2rem\"\n        }}>{\n          language === \"fr\" ? \"Figure dans\"\n          : \"Appears in\"\n        }</Typography>\n        {renderRefrences(data.occurrences, data.id)}\n      </Container>\n      </Layout>\n    )\n}","export function slugify(text:string) {\n  return text.toLowerCase()\n    .replace(/<[^>]+>/g, '') // remove html tags\n    .replace(/ /g,'-') // spaces become -\n    .replace(/-+/g, '-') // no repeated -\n    .replace(/[^\\p{L}-]+/gu,'') // remove all non word or - characters. TODO: this only saves ASCII characters!\n}"],"names":["props","___EmotionJSX","Behavior","node","teiNode","React","TEINodes","_extends","teiNodes","childNodes","el","entityContent","Array","from","getElementsByTagName","filter","e","getAttribute","lang","resp","authorsData","split","reduce","acc","a","push","authors","replace","author","length","Box","sx","fontStyle","textAlign","fontSize","join","renderRefrences","references","id","List","map","refObj","ListItem","ListItemText","Link","to","pageLink","pageName","repeats","Title","curLang","Typography","variant","component","gutterBottom","marginBottom","SafeUnchangedNode","ReferencesPage","_ref","pageContext","language","prefixed","elements","data","routes","Entity","_el$parentElement","parentElement","tagName","toLocaleLowerCase","Graphic","Ref","Q","_el$parentElement2","includes","Birth","Layout","location","slugify","name","SEO","title","Container","maxWidth","Renderer","marginTop","occurrences","text","toLowerCase"],"sourceRoot":""}