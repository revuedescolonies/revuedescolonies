{"version":3,"file":"component---src-templates-entities-tsx-b2465269e525d0efe8d1.js","mappings":"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","sources":["webpack://revuedescolonies/./src/templates/tei/Birth.tsx","webpack://revuedescolonies/./src/templates/entities.tsx","webpack://revuedescolonies/./src/utils/slugify.ts"],"sourcesContent":["import React from \"react\"\nimport { TBehavior } from \"gatsby-theme-ceteicean/src/components/DefaultBehaviors\"\nimport { TEINodes } from \"react-teirouter\"\nimport { Behavior } from \"gatsby-theme-ceteicean/src/components/Behavior\"\n\ntype TEIProps = {\n  teiNode: Node,\n  availableRoutes?: string[]\n}\n\nconst Birth: TBehavior = (props: TEIProps) => {\n  return (<Behavior node={props.teiNode}><>\n    <TEINodes \n        teiNodes={props.teiNode.childNodes}\n        {...props}/>{' – '}\n  </></Behavior>)\n}\n\nexport default Birth\n","import React from \"react\";\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Box, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\"\nimport { Link } from \"gatsby\"\nimport {Routes} from \"gatsby-theme-ceteicean/src/components/Ceteicean\"\nimport Renderer from \"gatsby-theme-ceteicean/src/components/Renderer\";\nimport Q from \"../gatsby-theme-ceteicean/components/Q\";\nimport Graphic from \"../gatsby-theme-ceteicean/components/Graphic\";\nimport { Ref, SafeUnchangedNode } from \"gatsby-theme-ceteicean/src/components/DefaultBehaviors\";\nimport { slugify } from \"../utils/slugify\";\nimport Birth from \"./tei/Birth\";\n\ninterface occurenceObj {\n    pageName: string\n    pageLink: string\n    repeats: number\n}\n\ninterface Props {\n  pageContext: {\n    language: Lang\n    data: {\n      id: string,\n      name: string,\n      occurrences: occurenceObj[]\n    }\n    elements: string[]\n    prefixed: string\n  }\n}\n\ntype TEIProps = {\n  teiNode: Node,\n  availableRoutes?: string[],\n  curLang: string\n}\n\n\nconst renderRefrences = (references:occurenceObj[], id: string) => {\n    \n    return (\n      <List>\n        {references.map((refObj:occurenceObj) => (\n          <ListItem>\n            <ListItemText>\n              <Link to={`/${refObj.pageLink}?showEntities=${id}`}>{refObj.pageName} ({refObj.repeats})</Link>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    )\n}\n\nconst Title = (props: TEIProps) => {\n  const el = props.teiNode as Element\n  const lang = el.getAttribute(\"lang\")\n  if (lang !== props.curLang) return null;\n  return <Typography variant=\"h3\" component=\"h1\" gutterBottom={false} sx={{\n    marginBottom: \"2rem\"\n  }}><SafeUnchangedNode {...props}/></Typography>\n}\n\nexport default function ReferencesPage({pageContext}: Props) {\n  const {language, prefixed, elements, data} = pageContext;\n\n  const routes: Routes = {\n    \"tei-graphic\": (props) => <Box sx={{textAlign: \"center\"}}><Graphic {...props}/></Box>,\n    \"tei-ref\": Ref,\n    \"tei-q\": (props) => <Q {...props} curLang={language}/>,\n    \"tei-persname\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-orgname\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-placename\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-title\": (props) => {\n      const el = props.teiNode as Element\n      return el.parentElement?.getAttribute(\"type\") === \"periodical\" ? <Title {...props} curLang={language}/>\n      : <SafeUnchangedNode {...props}/>\n    },\n    \"tei-birth\": Birth,\n    \"tei-note\": (props) => {\n      const el = props.teiNode as Element\n      if (el.getAttribute(\"xml:lang\") === language) {\n        return <SafeUnchangedNode {...props}/>\n      }\n      return null\n    }\n  }\n    return (\n      <Layout location={`/${language}/${slugify(data.name)}`}>\n      <SEO title={data.name} lang={\"en\"}/>\n      <Container component=\"main\" maxWidth=\"md\">\n        \n        <Renderer name={data.name} prefixed={prefixed} elements={elements} routes={routes}/>\n        <Typography variant=\"h4\" component=\"h2\" gutterBottom={false} sx={{\n          marginBottom: \"1rem\", marginTop: \"2rem\"\n        }}>{\n          language === \"fr\" ? \"Apparaît dans\"\n          : \"Appears in\"\n        }</Typography>\n        {renderRefrences(data.occurrences, data.id)}\n      </Container>\n      </Layout>\n    )\n}","export function slugify(text:string) {\n  return text.toLowerCase()\n    .replace(/<[^>]+>/g, '') // remove html tags\n    .replace(/ /g,'-') // spaces become -\n    .replace(/-+/g, '-') // no repeated -\n    .replace(/[^\\p{L}-]+/gu,'') // remove all non word or - characters. TODO: this only saves ASCII characters!\n}"],"names":["props","___EmotionJSX","Behavior","node","teiNode","React","TEINodes","_extends","teiNodes","childNodes","renderRefrences","references","id","List","map","refObj","ListItem","ListItemText","Link","to","pageLink","pageName","repeats","Title","getAttribute","curLang","Typography","variant","component","gutterBottom","sx","marginBottom","SafeUnchangedNode","ReferencesPage","_ref","pageContext","language","prefixed","elements","data","routes","Box","textAlign","Graphic","Ref","Q","_el$parentElement","parentElement","Birth","Layout","location","slugify","name","SEO","title","lang","Container","maxWidth","Renderer","marginTop","occurrences","text","toLowerCase","replace"],"sourceRoot":""}