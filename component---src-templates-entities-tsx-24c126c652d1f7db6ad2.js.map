{"version":3,"file":"component---src-templates-entities-tsx-24c126c652d1f7db6ad2.js","mappings":"yUAsCA,MAAMA,EAAkBA,CAACC,EAA2BC,KAG9CC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,KACFH,EAAWI,KAAKC,IACfH,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,MACPJ,EAAAA,EAAAA,KAACK,EAAAA,EAAY,MACXL,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,GAAE,IAAMJ,EAAOK,SAAQ,iBAAiBT,GAAOI,EAAOM,SAAS,KAAGN,EAAOO,QAAQ,UAQ/FC,EAASC,GACFA,EAAMC,QACDC,aAAa,UAChBF,EAAMG,QAAgB,MAC5Bf,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAc,EAAOC,GAAI,CACtEC,aAAc,UACbrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAsBV,IAGb,SAASW,EAAcC,GAAuB,IAAtB,YAACC,GAAmBD,EACzD,MAAM,SAACE,EAAQ,SAAEC,EAAQ,SAAEC,EAAQ,KAAEC,GAAQJ,EAEvCK,EAAiB,CACrB,cAAgBlB,IAAUZ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAG,CAACX,GAAI,CAACY,UAAW,YAAWhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAYrB,IACvE,UAAWsB,EAAAA,GACX,QAAUtB,IAAUZ,EAAAA,EAAAA,KAACmC,EAAAA,GAACC,EAAAA,EAAAA,GAAA,GAAKxB,EAAK,CAAEG,QAASW,KAC3C,eAAiBd,IAAUZ,EAAAA,EAAAA,KAACW,GAAKyB,EAAAA,EAAAA,GAAA,GAAKxB,EAAK,CAAEG,QAASW,KACtD,cAAgBd,IAAUZ,EAAAA,EAAAA,KAACW,GAAKyB,EAAAA,EAAAA,GAAA,GAAKxB,EAAK,CAAEG,QAASW,KACrD,gBAAkBd,IAAUZ,EAAAA,EAAAA,KAACW,GAAKyB,EAAAA,EAAAA,GAAA,GAAKxB,EAAK,CAAEG,QAASW,KACvD,YAAcd,IAAU,IAAAyB,EAEtB,MAAkD,gBAA3B,QAAhBA,EADIzB,EAAMC,QACPyB,qBAAa,IAAAD,OAAA,EAAhBA,EAAkBvB,aAAa,UAA2Bd,EAAAA,EAAAA,KAACW,GAAKyB,EAAAA,EAAAA,GAAA,GAAKxB,EAAK,CAAEG,QAASW,MAC1F1B,EAAAA,EAAAA,KAACsB,EAAAA,GAAsBV,EAAQ,EAEnC,WAAaA,GACAA,EAAMC,QACVC,aAAa,cAAgBY,GAC3B1B,EAAAA,EAAAA,KAACsB,EAAAA,GAAsBV,GAEzB,MAGT,OACEZ,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACC,SAAQ,IAAMd,EAAQ,KAAIe,EAAAA,EAAAA,GAAQZ,EAAKa,QAC/C1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAG,CAACC,MAAOf,EAAKa,KAAMG,KAAM,QAC7B7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CAAC5B,UAAU,OAAO6B,SAAS,OAEnC/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAQ,CAACN,KAAMb,EAAKa,KAAMf,SAAUA,EAAUC,SAAUA,EAAUE,OAAQA,KAC3E9B,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAc,EAAOC,GAAI,CAC/DC,aAAc,OAAQ4B,UAAW,SAEpB,OAAbvB,EAAoB,wBAClB,cAEH7B,EAAgBgC,EAAKqB,YAAarB,EAAK9B,KAIhD,C,uBCrGO,SAAS0C,EAAQU,GACtB,OAAOA,EAAKC,cACTC,QAAQ,WAAY,IACpBA,QAAQ,KAAK,KACbA,QAAQ,MAAO,KACfA,QAAQ,yqPAAe,GAC5B,C","sources":["webpack://revuedescolonies/./src/templates/entities.tsx","webpack://revuedescolonies/./src/utils/slugify.ts"],"sourcesContent":["import React from \"react\";\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { Box, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\"\nimport { Link } from \"gatsby\"\nimport {Routes} from \"gatsby-theme-ceteicean/src/components/Ceteicean\"\nimport Renderer from \"gatsby-theme-ceteicean/src/components/Renderer\";\nimport Q from \"../gatsby-theme-ceteicean/components/Q\";\nimport Graphic from \"../gatsby-theme-ceteicean/components/Graphic\";\nimport { Ref, SafeUnchangedNode } from \"gatsby-theme-ceteicean/src/components/DefaultBehaviors\";\nimport { slugify } from \"../utils/slugify\";\n\ninterface occurenceObj {\n    pageName: string\n    pageLink: string\n    repeats: number\n}\n\ninterface Props {\n  pageContext: {\n    language: Lang\n    data: {\n      id: string,\n      name: string,\n      occurrences: occurenceObj[]\n    }\n    elements: string[]\n    prefixed: string\n  }\n}\n\ntype TEIProps = {\n  teiNode: Node,\n  availableRoutes?: string[],\n  curLang: string\n}\n\n\nconst renderRefrences = (references:occurenceObj[], id: string) => {\n    \n    return (\n      <List>\n        {references.map((refObj:occurenceObj) => (\n          <ListItem>\n            <ListItemText>\n              <Link to={`/${refObj.pageLink}?showEntities=${id}`}>{refObj.pageName} ({refObj.repeats})</Link>\n            </ListItemText>\n          </ListItem>\n        ))}\n      </List>\n    )\n}\n\nconst Title = (props: TEIProps) => {\n  const el = props.teiNode as Element\n  const lang = el.getAttribute(\"lang\")\n  if (lang !== props.curLang) return null;\n  return <Typography variant=\"h3\" component=\"h1\" gutterBottom={false} sx={{\n    marginBottom: \"2rem\"\n  }}><SafeUnchangedNode {...props}/></Typography>\n}\n\nexport default function ReferencesPage({pageContext}: Props) {\n  const {language, prefixed, elements, data} = pageContext;\n\n  const routes: Routes = {\n    \"tei-graphic\": (props) => <Box sx={{textAlign: \"center\"}}><Graphic {...props}/></Box>,\n    \"tei-ref\": Ref,\n    \"tei-q\": (props) => <Q {...props} curLang={language}/>,\n    \"tei-persname\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-orgname\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-placename\": (props) => <Title {...props} curLang={language}/>,\n    \"tei-title\": (props) => {\n      const el = props.teiNode as Element\n      return el.parentElement?.getAttribute(\"type\") === \"periodical\" ? <Title {...props} curLang={language}/>\n      : <SafeUnchangedNode {...props}/>\n    },\n    \"tei-note\": (props) => {\n      const el = props.teiNode as Element\n      if (el.getAttribute(\"xml:lang\") === language) {\n        return <SafeUnchangedNode {...props}/>\n      }\n      return null\n    }\n  }\n    return (\n      <Layout location={`/${language}/${slugify(data.name)}`}>\n      <SEO title={data.name} lang={\"en\"}/>\n      <Container component=\"main\" maxWidth=\"md\">\n        \n        <Renderer name={data.name} prefixed={prefixed} elements={elements} routes={routes}/>\n        <Typography variant=\"h4\" component=\"h2\" gutterBottom={false} sx={{\n          marginBottom: \"1rem\", marginTop: \"2rem\"\n        }}>{\n          language === \"fr\" ? \"Peut être trouvé dans\"\n          : \"Appears in\"\n        }</Typography>\n        {renderRefrences(data.occurrences, data.id)}\n      </Container>\n      </Layout>\n    )\n}","export function slugify(text:string) {\n  return text.toLowerCase()\n    .replace(/<[^>]+>/g, '') // remove html tags\n    .replace(/ /g,'-') // spaces become -\n    .replace(/-+/g, '-') // no repeated -\n    .replace(/[^\\p{L}-]+/gu,'') // remove all non word or - characters. TODO: this only saves ASCII characters!\n}"],"names":["renderRefrences","references","id","___EmotionJSX","List","map","refObj","ListItem","ListItemText","Link","to","pageLink","pageName","repeats","Title","props","teiNode","getAttribute","curLang","Typography","variant","component","gutterBottom","sx","marginBottom","SafeUnchangedNode","ReferencesPage","_ref","pageContext","language","prefixed","elements","data","routes","Box","textAlign","Graphic","Ref","Q","_extends","_el$parentElement","parentElement","Layout","location","slugify","name","SEO","title","lang","Container","maxWidth","Renderer","marginTop","occurrences","text","toLowerCase","replace"],"sourceRoot":""}